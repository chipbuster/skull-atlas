#!/bin/bash

set -euo pipefail

ZIPFILE="$1"
DIR="$2"
DIRDIR_FILE="$3"

NUMID=$(basename -s .zip "$ZIPFILE") #The number assigned to the patient.

TMPDIR="${DIR}/""${NUMID}_TMP"
mkdir "$TMPDIR" # Create temporary working directory
cd "$TMPDIR"

unzip -o "$DIR/$ZIPFILE" > /dev/null #-o forces overwrite if files already exist

## We seek to organize the data into the structure described in the README.
# Once we unzip the zipfile, there are a few possibilities:

#  (1) We find a directory with the same NUMID as the zipfile. Great!
#      Move all of its contents into a temporary dir to create the structure.

if [ -d "$NUMID" ]; then
    mkdir ./tempdir
    mv "$NUMID" tempdir/DICOMOBJ
    mv tempdir "$NUMID"
fi

# (2) We find a directory named DICOMOBJ. We can fix this by making the $NUMID
# directory and then moving the DICOMOBJ under it.

if [ -d "DICOMOBJ" ]; then
    mkdir "$NUMID"
    mv DICOMOBJ "$NUMID"
fi

# (3) We find a directory named SynapseMediaSets. This is trickier because
# the images are in a subdirectory below Syn201[ID]*, where [ID] is some numerical
# identifier dealing with when the data was accessed. We need to move the DICOMOBJ
# to up here and clean the remaining files (they are merely clutter to us)

if [ -d "SynapseMediaSets" ]; then

    # We only expect Syn2016* to be in directory: if more than 1 file, this is unexpected
    if [ $(ls -1 SynapseMediaSets | wc -l ) != "1" ]; then
        echo "Error occured at $DIR: unexpected contents in SynapseMediaSets of $NUMID"
        exit -1
    fi

    # Copy the appropriate DICOMOBJ to top-level if it exists
    if [ -d SynapseMediaSets/Syn*/DICOMOBJ ]; then
        mkdir "$NUMID"
        mv SynapseMediaSets/Syn*/DICOMOBJ "$NUMID"
    else
        #Not good error reporting but I'm on a time budget here :(
        echo "Could not find directory DICOMOBJ in SynapseMediaSets"
        echo "Working in $DIR"
        exit 1
    fi

    # Clean the rest up
    rm -rf SynapseMediaSets
fi

# (4) Something else happened and none of the above triggered (currently unexpected)

if [ ! -d "$NUMID" ]; then
    echo "Something unexpected happened during file processing"
    echo "After unzipping the archive in $DIR"
    echo "I'm seeing $(ls -l)"
    echo ""
    echo ""
    echo "Please report the above error to the script writer."
    echo "###############"
    echo "## Aborting! ##"
    echo "###############"
    exit 1
fi

# If the extraction was successful, do other required things
if [ -d "$NUMID/DICOMOBJ" ]; then
  mkdir "$NUMID"/VOLIMG         # For volumetric images
  mkdir "$NUMID"/METADATA       # For metadata dumps
  mkdir "$NUMID"/DICOMUNC       # For uncompressed DICOM images
  echo "$DIR/$NUMID" >> "$DIRDIR_FILE" # Add this folder to the data folder list

  # Move the directories to the right location and clean the temp
  mv "$NUMID" "$DIR/$NUMID"   # Move created NUMID to top-level
  cd "$DIR"                   # Change dir to target location
  rmdir "$TMPDIR"             # Remove temporary directory
fi

